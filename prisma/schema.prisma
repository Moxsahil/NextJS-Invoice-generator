generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                    String         @id @default(cuid())
  email                 String         @unique
  name                  String
  password              String
  createdAt             DateTime       @default(now())
  updatedAt             DateTime       @updatedAt
  accountName           String?
  accountNumber         String?
  bankBranch            String?
  bankName              String?
  browserNotifications  Boolean        @default(true)
  colorScheme           String         @default("blue")
  companyAddress        String?
  companyCity           String?
  companyCountry        String?        @default("India")
  companyEmail          String?
  companyGSTIN          String?
  companyLogo           String?
  companyName           String?
  companyPhone          String?
  companyState          String?
  companyWebsite        String?
  companyZipCode        String?
  defaultCurrency       String         @default("INR")
  defaultPaymentTerms   String         @default("30 days")
  defaultTaxRate        Float          @default(18.0)
  sgstRate              Float          @default(9.0)
  cgstRate              Float          @default(9.0)
  igstRate              Float          @default(18.0)
  emailNotifications    Boolean        @default(true)
  fontSize              String         @default("medium")
  ifscCode              String?
  invoiceFooter         String?
  invoicePrefix         String         @default("INV")
  invoiceSuffix         String?
  invoiceReminders      Boolean        @default(true)
  invoiceStartNumber    Int            @default(1001)
  invoiceResetNumbering String         @default("never")
  includeQRCode         Boolean        @default(true)
  showBankDetails       Boolean        @default(true)
  showCompanyLogo       Boolean        @default(true)
  showPaymentTerms      Boolean        @default(true)
  autoSendEmail         Boolean        @default(false)
  emailTemplate         String         @default("professional")
  defaultTerms          String?
  language              String?        @default("en")
  marketingEmails       Boolean        @default(false)
  passwordLastChanged   DateTime?
  paymentAlerts         Boolean        @default(true)
  phone                 String?
  sessionTimeout        Int            @default(4320) // 72 hours in minutes
  loginAlerts           Boolean        @default(true)
  allowMultipleSessions Boolean        @default(true)
  theme                 String         @default("light")
  timezone              String?        @default("Asia/Kolkata")
  twoFactorEnabled      Boolean        @default(false)
  twoFactorSecret       String?
  twoFactorBackupCodes  String?
  passwordResetToken    String?
  passwordResetExpires  DateTime?
  upiId                 String?
  merchantName          String?
  
  // Billing & Subscription fields (Razorpay Integration)
  subscriptionStatus    SubscriptionStatus @default(TRIAL)
  planId                String?        @default("free")
  subscriptionStartDate DateTime?
  subscriptionEndDate   DateTime?
  nextBillingDate       DateTime?
  trialEndsAt           DateTime?      @default(dbgenerated("NOW() + INTERVAL '7 days'"))
  invoiceUsage          Int            @default(0) // Track usage for current period
  razorpayCustomerId    String?        // Razorpay customer ID
  
  customers             Customer[]
  invoices              Invoice[]
  notifications         Notification[]
  sessions              UserSession[]
  subscriptions         Subscription[]
  billingHistory        BillingHistory[]
  transactions          Transaction[]
}

model Invoice {
  id              String        @id @default(cuid())
  invoiceNumber   String        @unique
  companyName     String
  companyGSTIN    String?
  companyAddress  String
  companyPhone    String?
  customerName    String
  customerGSTIN   String?
  customerAddress String
  invoiceDate     DateTime
  dueDate         DateTime
  subtotal        Float
  sgstAmount      Float
  cgstAmount      Float
  totalAmount     Float
  status          InvoiceStatus @default(DRAFT)
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  userId          String
  customerId      String?
  customer        Customer?     @relation(fields: [customerId], references: [id])
  user            User          @relation(fields: [userId], references: [id])
  items           InvoiceItem[]
}

model InvoiceItem {
  id          String  @id @default(cuid())
  description String
  quantity    Float
  rate        Float
  amount      Float
  invoiceId   String
  invoice     Invoice @relation(fields: [invoiceId], references: [id], onDelete: Cascade)
}

model Customer {
  id        String    @id @default(cuid())
  name      String
  email     String    @unique
  phone     String?
  gstin     String?
  address   String?
  city      String?
  state     String?
  zipCode   String?
  country   String?
  status    String    @default("Active")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  userId    String?
  user      User?     @relation(fields: [userId], references: [id])
  invoices  Invoice[]
}

enum InvoiceStatus {
  DRAFT
  SENT
  PAID
  OVERDUE
}

model Notification {
  id        String               @id @default(cuid())
  title     String
  message   String
  type      NotificationType
  category  NotificationCategory
  isRead    Boolean              @default(false)
  userId    String
  user      User                 @relation(fields: [userId], references: [id], onDelete: Cascade)
  metadata  Json?
  createdAt DateTime             @default(now())
  updatedAt DateTime             @updatedAt

  @@map("notifications")
}

enum NotificationType {
  SUCCESS
  INFO
  WARNING
  ERROR
}

enum NotificationCategory {
  INVOICE_CREATED
  INVOICE_SENT
  INVOICE_PAID
  INVOICE_OVERDUE
  PAYMENT_RECEIVED
  PAYMENT_FAILED
  NEW_CUSTOMER
  CUSTOMER_UPDATED
  SYSTEM_UPDATE
  SECURITY_ALERT
}

model UserSession {
  id         String   @id @default(cuid())
  userId     String
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  sessionId  String   @unique
  ipAddress  String?
  userAgent  String?
  city       String?
  country    String?
  device     String?
  browser    String?
  os         String?
  isActive   Boolean  @default(true)
  lastActive DateTime @default(now())
  createdAt  DateTime @default(now())
  expiresAt  DateTime

  @@map("user_sessions")
}

model Subscription {
  id                    String                @id @default(cuid())
  userId                String
  user                  User                  @relation(fields: [userId], references: [id], onDelete: Cascade)
  planId                String
  plan                  Plan                  @relation(fields: [planId], references: [id])
  status                SubscriptionStatus
  currentPeriodStart    DateTime
  currentPeriodEnd      DateTime
  trialStart            DateTime?
  trialEnd              DateTime?
  canceledAt            DateTime?
  cancelAtPeriodEnd     Boolean               @default(false)
  autoRenew             Boolean               @default(true)
  razorpaySubscriptionId String?              @unique // Razorpay subscription ID (for recurring)
  razorpayCustomerId    String?               // Razorpay customer ID
  metadata              Json?                 // Razorpay subscription data
  createdAt             DateTime              @default(now())
  updatedAt             DateTime              @updatedAt
  
  @@map("subscriptions")
}

model BillingHistory {
  id                    String                @id @default(cuid())
  userId                String
  user                  User                  @relation(fields: [userId], references: [id], onDelete: Cascade)
  subscriptionId        String?
  transactionId         String?
  amount                Float
  currency              String                @default("INR")
  status                BillingStatus
  planName              String
  billingReason         String?               // subscription_payment, plan_change, etc.
  description           String?
  periodStart           DateTime
  periodEnd             DateTime
  paidAt                DateTime?
  dueDate               DateTime?
  invoiceNumber         String?               @unique
  paymentMethod         String?               // Card, UPI, Net Banking, Wallet
  razorpayPaymentId     String?               // Razorpay payment ID
  razorpayOrderId       String?               // Razorpay order ID
  metadata              Json?                 // Razorpay payment data
  createdAt             DateTime              @default(now())
  updatedAt             DateTime              @updatedAt
  
  @@map("billing_history")
}

model Plan {
  id                    String                @id @default(cuid())
  name                  String
  description           String?
  price                 Float
  currency              String                @default("INR")
  interval              PricingInterval
  intervalCount         Int                   @default(1)
  trialPeriodDays       Int?                  @default(7)
  features              Json // Array of features
  limits                Json // Usage limits (invoices per month, users, etc.)
  isActive              Boolean               @default(true)
  isPopular             Boolean               @default(false)
  sortOrder             Int                   @default(0)
  color                 String?               @default("blue")
  subscriptions         Subscription[]
  createdAt             DateTime              @default(now())
  updatedAt             DateTime              @updatedAt
  
  @@map("plans")
}

model Transaction {
  id                    String                @id @default(cuid())
  userId                String
  user                  User                  @relation(fields: [userId], references: [id], onDelete: Cascade)
  type                  TransactionType
  amount                Float
  currency              String                @default("INR")
  status                TransactionStatus
  reference             String?               @unique // Razorpay order_id for tracking
  description           String
  paymentMethod         String?               // Payment method used (Card, UPI, etc.)
  razorpayPaymentId     String?               // Razorpay payment_id
  razorpayOrderId       String?               // Razorpay order_id
  razorpaySignature     String?               // Payment signature
  metadata              Json?                 // Additional Razorpay data
  processedAt           DateTime?
  failureReason         String?
  createdAt             DateTime              @default(now())
  updatedAt             DateTime              @updatedAt
  
  @@map("transactions")
}

enum SubscriptionStatus {
  TRIAL
  ACTIVE
  CANCELED
  PAST_DUE
  UNPAID
  INCOMPLETE
  INCOMPLETE_EXPIRED
}

enum BillingStatus {
  PAID
  PENDING
  FAILED
  CANCELED
  REFUNDED
}

enum PricingInterval {
  MONTH
  YEAR
}

enum TransactionType {
  SUBSCRIPTION_PAYMENT
  PLAN_UPGRADE
  PLAN_DOWNGRADE
  REFUND
}

enum TransactionStatus {
  PENDING
  PROCESSING
  SUCCESS
  FAILED
  CANCELED
  REFUNDED
}
